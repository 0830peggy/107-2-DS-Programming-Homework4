df_commit
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
# df_allCommits
library(purrr)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
# df_allCommits$samePerson
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name
df_allCommits$samePerson
# df_validCommits
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,]
df_validCommits
# df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$commitDate
# df_validCommits$hh
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$hh
# df_validCommits$date
df_validCommits$date <- date(df_validCommits$commitDate)
df_validCommits$date
# df_validCommits$weekday
library(lubridate)
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$validCommit
trueweekday <- 2 <= df_validCommits$weekday & df_validCommits$weekday <= 4
truehour <- 12 <= df_validCommits$hh & df_validCommits$hh <= 23
df_validCommits$validCommit <- trueweekday==T & truehour==T
df_validCommits$validCommit
# df_validCommitsSubsample
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,]
df_validCommitsSubsample
# validCounts
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
commitHistory <- content(GET("https://api.github.com/repos/username/reponame/commits"))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC") # 1.7
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$hh <- hour(df_validCommits$commitDate) # 1.8
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count("0830peggy","107-2-inclass-practice",4,15,16)
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC") # 1.7
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$hh <- hour(df_validCommits$commitDate) # 1.8
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count("0830peggy","107-2-inclass-practice",4,15,16)
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC") # 1.7
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$hh <- hour(df_validCommits$commitDate) # 1.8
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
# oneCommitRecord
oneCommitRecord <- commitHistory[[10]]
oneCommitRecord
# df_commit
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
df_commit
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
# df_allCommits
library(purrr)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
# df_allCommits$samePerson
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name
df_allCommits$samePerson
# df_validCommits
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,]
df_validCommits
# df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$commitDate
# df_validCommits$hh
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$hh
# df_validCommits$date
df_validCommits$date <- date(df_validCommits$commitDate)
df_validCommits$date
# df_validCommits$weekday
library(lubridate)
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$validCommit
trueweekday <- 2 <= df_validCommits$weekday & df_validCommits$weekday <= 4
truehour <- 12 <= df_validCommits$hh & df_validCommits$hh <= 23
df_validCommits$validCommit <- trueweekday==T & truehour==T
df_validCommits$validCommit
# df_validCommitsSubsample
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,]
df_validCommitsSubsample
# validCounts
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- oneCommitRecord$commit$author$name == oneCommitRecord$commit$committer$name # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC") # 1.7
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$hh <- hour(df_validCommits$commitDate) # 1.8
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
# df_allCommits$samePerson
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter
df_allCommits$samePerson
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei") # 1.7
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh) # 1.8
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
# df_validCommits
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,]
df_validCommits
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
# oneCommitRecord
oneCommitRecord <- commitHistory[[10]]
oneCommitRecord
# df_commit
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
df_commit
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
# df_allCommits
library(purrr)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
# df_allCommits$samePerson
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter
df_allCommits$samePerson
# df_validCommits
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,]
df_validCommits
# df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$commitDate
# df_validCommits$hh
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$hh
# df_validCommits$date
df_validCommits$date <- date(df_validCommits$commitDate)
df_validCommits$date
# df_validCommits$weekday
library(lubridate)
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$validCommit
trueweekday <- 2 <= df_validCommits$weekday & df_validCommits$weekday <= 4
truehour <- 12 <= df_validCommits$hh & df_validCommits$hh <= 23
df_validCommits$validCommit <- trueweekday==T & truehour==T
df_validCommits$validCommit
# df_validCommitsSubsample
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,]
df_validCommitsSubsample
# validCounts
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei") # 1.7
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh) # 1.8
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei") # 1.7
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh) # 1.8
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei") # 1.7
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh) # 1.8
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count("0830peggy","107-2-inclass-practice",4,15,16)
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
# oneCommitRecord
oneCommitRecord <- commitHistory[[10]]
oneCommitRecord
# df_commit
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
df_commit
# commit_df_fun
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
# df_allCommits
library(purrr)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
# df_allCommits$samePerson
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter
df_allCommits$samePerson
# df_validCommits
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,]
df_validCommits
# df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei")
df_validCommits$commitDate
# df_validCommits$hh
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh)
df_validCommits$hh
# df_validCommits$date
df_validCommits$date <- date(df_validCommits$commitDate)
df_validCommits$date
# df_validCommits$weekday
library(lubridate)
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$validCommit
trueweekday <- 2 <= df_validCommits$weekday & df_validCommits$weekday <= 4
truehour <- 12 <= df_validCommits$hh & df_validCommits$hh <= 23
df_validCommits$validCommit <- trueweekday==T & truehour==T
df_validCommits$validCommit
# df_validCommitsSubsample
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,]
df_validCommitsSubsample
# validCounts
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts
# valid_commit_count
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all("https://api.github.com/repos/r-hub/cranlogs/commits",
c("r-hub"=username,
"cranlogs"=reponame)) -> commitstep1
commitHistory <- content(GET(commitstep1))
df_allCommits <- map_dfr(commitHistory,commit_df_fun) # 1.4
df_allCommits$samePerson <- df_allCommits$author == df_allCommits$commiter # 1.5
df_validCommits <- df_allCommits[df_allCommits$samePerson==T,] # 1.6
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate,tz="UTC")
df_validCommits$commitDate <- with_tz(df_validCommits$commitDate,tzone="Asia/Taipei") # 1.7
df_validCommits$hh <- hour(df_validCommits$commitDate)
df_validCommits$hh <- as.integer(df_validCommits$hh) # 1.8
df_validCommits$date <- date(df_validCommits$commitDate) # 1.9
lubridate::wday(df_validCommits$commitDate) -> df_validCommits$weekday
df_validCommits$weekday <- as.integer(df_validCommits$weekday) # 1.10
trueweekday <- wday <= df_validCommits$weekday & df_validCommits$weekday <= wday
truehour <- startHour <= df_validCommits$hh & df_validCommits$hh <= endHour
df_validCommits$validCommit <- trueweekday==T & truehour==T # 1.11
df_validCommitsSubsample <- df_validCommits[df_validCommits$validCommit==T,] # 1.12
as.factor(df_validCommitsSubsample$date) -> count1
levels(count1) -> count2
validCounts <- as.integer(length(count2))
validCounts # 1.13
return(validCounts)
}
valid_commit_count
